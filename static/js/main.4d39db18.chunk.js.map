{"version":3,"sources":["components/TaskListItem.module.css","components/TaskList.module.css","components/UI/ErrorModal.module.css","components/InputForm.module.css","components/UI/Card.module.css","components/UI/Button.module.css","components/TaskInput.module.css","components/UI/Card.js","components/UI/Button.js","components/UI/ErrorModal.js","components/InputForm.js","components/TaskInput.js","components/TaskListItem.js","components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Button","type","button","onClick","ErrorModal","Backdrop","onConfirm","backdrop","Overlay","overlay","header","message","actions","Fragment","ReactDOM","createPortal","document","getElementById","InputForm","useState","error","setError","taskInput","setTaskInput","useEffect","editMode","editTask","task","onSubmit","event","preventDefault","enteredTask","trim","length","onAddTask","placeholder","value","onChange","target","TaskInput","TaskListItem","iscompleted","setIsCompleted","name","onEditTask","id","edit","checkbox","prev","onCheckboxClick","onRemove","trash","TaskList","showTasksHandler","onShowtasks","tasks","heading","bind","datas","map","data","onDeleteAllTasks","onDeleteCompletedTasks","App","setTasks","tasksToShow","setTasksToShow","setEditMode","setEditTask","showTasks","filter","completed","noOfTasks","prevTasks","updatedTasks","editTaskIndex","findIndex","updatedTask","unshift","Math","random","toString","taskToBeEdited","find","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.4d39db18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"data-item\":\"TaskListItem_data-item__JLGO_\",\"name\":\"TaskListItem_name__CDEBM\",\"actions\":\"TaskListItem_actions__2s2-e\",\"checkbox\":\"TaskListItem_checkbox__2B98R\",\"edit\":\"TaskListItem_edit__1VPNw\",\"trash\":\"TaskListItem_trash__2K-bX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasks\":\"TaskList_tasks__si4yv\",\"heading\":\"TaskList_heading__2wHH5\",\"actions\":\"TaskList_actions__UVbFy\",\"task-list\":\"TaskList_task-list__3AXMk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"ErrorModal_backdrop__2-u50\",\"header\":\"ErrorModal_header__jGfec\",\"actions\":\"ErrorModal_actions__3CnMs\",\"overlay\":\"ErrorModal_overlay__2hUYG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"InputForm_form-control__1LZab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2JdDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QaoZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskInput\":\"TaskInput_taskInput__1O_Er\"};","import React from \"react\";\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <section className={`${classes.card} ${props.className}`}>\r\n      {props.children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      type={props.type}\r\n      className={`${classes.button} ${props.className}`}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Button from \"./Button\";\r\nimport Card from \"./Card\";\r\n\r\nimport classes from \"./ErrorModal.module.css\";\r\nconst ErrorModal = (props) => {\r\n  const Backdrop = () => {\r\n    return <div onClick={props.onConfirm} className={classes.backdrop} />;\r\n  };\r\n\r\n  const Overlay = (props) => {\r\n    return (\r\n      <Card className={classes.overlay}>\r\n        <header className={classes.header}>\r\n          <i className=\"fas fa-times-circle fa-2x\"></i>\r\n          <h2>{props.message}</h2>\r\n        </header>\r\n        <footer className={classes.actions}>\r\n          <Button onClick={props.onConfirm}>Okay</Button>\r\n        </footer>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onConfirm={props.onConfirm} />,\r\n        document.getElementById(\"backdrop-root\"),\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <Overlay message={props.message} onConfirm={props.onConfirm} />,\r\n        document.getElementById(\"overlay-root\"),\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./InputForm.module.css\";\r\nimport Button from \"./UI/Button\";\r\nimport ErrorModal from \"./UI/ErrorModal\";\r\n\r\nconst InputForm = (props) => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const [taskInput, setTaskInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (props.editMode) {\r\n      setTaskInput(props.editTask.task);\r\n    }\r\n  }, [props.editMode, props.editTask]);\r\n\r\n  const onInputChangeHandler = (event) => {\r\n    setTaskInput(event.target.value);\r\n  };\r\n\r\n  const submitTaskHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredTask = taskInput;\r\n\r\n    if (enteredTask.trim().length === 0) {\r\n      setError(\"Task should not be empty\");\r\n      return;\r\n    }\r\n\r\n    props.onAddTask(enteredTask);\r\n    setTaskInput(\"\");\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {error && <ErrorModal message={error} onConfirm={errorHandler} />}\r\n      <form className={classes[\"user-form\"]} onSubmit={submitTaskHandler}>\r\n        <div className={classes[\"form-control\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Task Here...\"\r\n            value={taskInput}\r\n            onChange={onInputChangeHandler}\r\n          />\r\n        </div>\r\n        <Button type=\"submit\">{props.editMode ? \"Edit\" : \"+ Add Task\"}</Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","import React from \"react\";\r\nimport Card from \"./UI/Card\";\r\nimport InputForm from \"./InputForm\";\r\nimport classes from \"./TaskInput.module.css\";\r\n\r\nconst TaskInput = (props) => {\r\n  return (\r\n    <Card className={classes.taskInput}>\r\n      <h1>To-Do Input</h1>\r\n      <InputForm\r\n        onAddTask={props.onAddTask}\r\n        editMode={props.editMode}\r\n        editTask={props.editTask}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskInput;\r\n","import { useState } from \"react\";\r\nimport classes from \"./TaskListItem.module.css\";\r\n\r\nconst TaskListItem = (props) => {\r\n  const [iscompleted, setIsCompleted] = useState(false);\r\n\r\n  const deleteHandler = () => {\r\n    props.onRemove(props.id);\r\n  };\r\n\r\n  const checkboxHandler = () => {\r\n    setIsCompleted((prev) => !prev);\r\n    props.onCheckboxClick(props.id);\r\n  };\r\n\r\n  const editHandler = () => {\r\n    props.onEditTask(props.id);\r\n  };\r\n\r\n  return (\r\n    <li className={classes[\"data-item\"]}>\r\n      <div className={classes.name}>{props.task}</div>\r\n      <div className={classes.actions}>\r\n        <div onClick={editHandler}>\r\n          <i className={`${\"far fa-edit fa-2x\"} ${classes.edit} `}></i>\r\n        </div>\r\n        <div className={classes.checkbox} onClick={checkboxHandler}>\r\n          <i\r\n            className={`${\r\n              !iscompleted ? \"far fa-square fa-2x\" : \"far fa-check-square fa-2x\"\r\n            }`}\r\n          ></i>\r\n        </div>\r\n        <div onClick={deleteHandler}>\r\n          <i className={`${\"far fa-trash-alt fa-2x\"} ${classes.trash} `}></i>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TaskListItem;\r\n","import TaskListItem from \"./TaskListItem\";\r\nimport Card from \"./UI/Card\";\r\n\r\nimport classes from \"./TaskList.module.css\";\r\nimport Button from \"./UI/Button\";\r\n\r\nconst TaskList = (props) => {\r\n  const showTasksHandler = (type) => {\r\n    props.onShowtasks(type);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.tasks}>\r\n      <h1 className={classes.heading}>To-Do's</h1>\r\n      <div className={classes.actions}>\r\n        <Button onClick={showTasksHandler.bind(null, \"all\")}>All </Button>\r\n        <Button onClick={showTasksHandler.bind(null, \"done\")}>Done </Button>\r\n        <Button onClick={showTasksHandler.bind(null, \"todo\")}>Todo</Button>\r\n      </div>\r\n      <ul className={classes[\"task-list\"]}>\r\n        {props.datas.map((data) => (\r\n          <TaskListItem\r\n            key={data.id}\r\n            id={data.id}\r\n            task={data.task}\r\n            onRemove={props.onRemove}\r\n            onCheckboxClick={props.onCheckboxClick}\r\n            onEditTask={props.onEditTask}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <div className={classes.actions}>\r\n        <Button onClick={props.onDeleteAllTasks}>Delete All Tasks</Button>\r\n        <Button onClick={props.onDeleteCompletedTasks}>\r\n          Delete Done Tasks\r\n        </Button>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport TaskInput from \"./components/TaskInput\";\nimport TaskList from \"./components/TaskList\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [tasksToShow, setTasksToShow] = useState(\"all\");\n  const [editMode, setEditMode] = useState(false);\n  const [editTask, setEditTask] = useState({});\n\n  const addTaskHandler = (enteredTask) => {\n    if (editMode) {\n      setTasks((prevTasks) => {\n        const updatedTasks = [...prevTasks];\n\n        const editTaskIndex = updatedTasks.findIndex(\n          (task) => task.id === editTask.id,\n        );\n\n        const updatedTask = {\n          task: enteredTask,\n          id: editTask.id,\n          completed: false,\n        };\n\n        updatedTasks[editTaskIndex] = updatedTask;\n\n        return updatedTasks;\n      });\n      setEditMode(false);\n      return;\n    }\n\n    setTasks((prevTasks) => {\n      const updatedTasks = [...prevTasks];\n\n      updatedTasks.unshift({\n        task: enteredTask,\n        id: Math.random().toString(),\n        completed: false,\n      });\n      return updatedTasks;\n    });\n  };\n\n  const removeTaskHandler = (id) => {\n    setTasks((prevTasks) => {\n      const updatedTasks = prevTasks.filter((data) => data.id !== id);\n\n      return updatedTasks;\n    });\n  };\n\n  const checkboxHandler = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, completed: !task.completed } : task,\n      ),\n    );\n  };\n\n  const editTaskHandler = (id) => {\n    setEditMode(true);\n    const taskToBeEdited = tasks.find((task) => task.id === id);\n    console.log(taskToBeEdited);\n    setEditTask(taskToBeEdited);\n  };\n\n  const tasksToShowHandler = (type) => {\n    setTasksToShow(type);\n  };\n\n  let showTasks = [];\n\n  if (tasksToShow === \"all\") showTasks = tasks;\n  else if (tasksToShow === \"done\")\n    showTasks = tasks.filter((task) => task.completed === true);\n  else if (tasksToShow === \"todo\")\n    showTasks = tasks.filter((task) => task.completed === false);\n\n  const noOfTasks = tasks.length > 0;\n\n  const deleteAllTasksHandler = () => {\n    setTasks([]);\n  };\n\n  const deleteCompletedTasksHandler = () => {\n    setTasks((prevTasks) => {\n      const updatedTasks = prevTasks.filter((task) => task.completed === false);\n\n      return updatedTasks;\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <TaskInput\n        onAddTask={addTaskHandler}\n        editMode={editMode}\n        editTask={editTask}\n      />\n      {noOfTasks && (\n        <TaskList\n          datas={showTasks}\n          onCheckboxClick={checkboxHandler}\n          onRemove={removeTaskHandler}\n          onShowtasks={tasksToShowHandler}\n          onDeleteAllTasks={deleteAllTasksHandler}\n          onDeleteCompletedTasks={deleteCompletedTasksHandler}\n          onEditTask={editTaskHandler}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}